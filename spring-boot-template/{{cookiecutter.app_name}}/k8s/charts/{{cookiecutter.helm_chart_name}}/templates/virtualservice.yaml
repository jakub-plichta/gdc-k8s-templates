apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.fullname" . {% raw %}}}{% endraw %}-gateway
  labels:
{% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.labels" . | indent 4 {% raw %}}}{% endraw %}
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http-{% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.fullname" . {% raw %}}}{% endraw %}
        protocol: HTTP
      hosts:
        - {% raw %}{{{% endraw %} .Values.{{cookiecutter.k8s_values_first_level}}.{{cookiecutter.k8s_values_second_level}}.service.ingressHost {% raw %}}}{% endraw %}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.fullname" . {% raw %}}}{% endraw %}-service-http
  labels:
{% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.labels" . | indent 4 {% raw %}}}{% endraw %}
spec:
  hosts:
    - {% raw %}{{{% endraw %} .Values.{{cookiecutter.k8s_values_first_level}}.{{cookiecutter.k8s_values_second_level}}.service.ingressHost {% raw %}}}{% endraw %}
  gateways:
    - {% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.fullname" . {% raw %}}}{% endraw %}-gateway
  http:
    - match:
      - uri:
          prefix: /
      route:
        - destination:
            host: {% raw %}{{{% endraw %} include "{{cookiecutter.helm_chart_name}}.fullname" . {% raw %}}}{% endraw %}.{% raw %}{{{% endraw %} .Release.Namespace {% raw %}}}{% endraw %}.svc.cluster.local
            port:
              number: {% raw %}{{{% endraw %} .Values.{{cookiecutter.k8s_values_first_level}}.{{cookiecutter.k8s_values_second_level}}.service.externalPort {% raw %}}}{% endraw %}
